---
// src/pages/guides/[slug].astro
import groq from 'groq'
import { sanity } from '../../lib/sanity'
import Base from '../../layouts/Base.astro'
import SanityImage from '../../components/SanityImage.astro'
import RichText from '../../components/RichText.astro'
import TableOfContents from '../../components/TableOfContents.astro'
import { slugify } from '../../lib/slug'

export async function getStaticPaths() {
  const slugs = await sanity.fetch(
    groq`*[_type=="post" && defined(slug.current)][].slug.current`
  )
  return slugs.map((slug: string) => ({ params: { slug } }))
}

const { slug } = Astro.params
const post = await sanity.fetch(
  groq`*[_type=="post" && slug.current==$slug][0]{
    title,
    excerpt,
    difficulty,
    duration,
    "coverImage": mainImage,
    publishedAt,
    _updatedAt,
    author->{ name, image, bio },
    body
  }`,
  { slug }
)

// Build TOC from H2/H3
const toc = (post?.body || [])
  .filter((b: any) => b?._type === 'block' && (b.style === 'h2' || b.style === 'h3'))
  .map((b: any) => {
    const text = (b.children || []).map((c: any) => c.text || '').join(' ')
    return { id: slugify(text), text, level: b.style }
  })

const published = post?.publishedAt ? new Date(post.publishedAt) : null
const updated   = post?._updatedAt   ? new Date(post._updatedAt)   : null
---

<Base title={post?.title} description={post?.excerpt || post?.title}>
  <a href="/guides/" class="text-white/80 hover:text-white">‚Üê All Guides</a>

  <header class="mt-3 mb-4">
    <h1 class="text-4xl sm:text-5xl md:text-6xl font-semibold leading-tight">
      {post?.title}
    </h1>

    <!-- Dates row with icons -->
    <p class="opacity-70 text-sm mt-3 flex items-center gap-4 flex-wrap">
      {published && (
        <span class="flex items-center gap-1">
          <span class="text-[#7aa2ff]" aria-hidden="true">
            <!-- calendar icon -->
            <svg class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
              <path d="M6 2a1 1 0 0 0-1 1v1H4a2 2 0 0 0-2 2v2h16V6a2 2 0 0 0-2-2h-1V3a1 1 0 1 0-2 0v1H7V3a1 1 0 0 0-1-1z"/>
              <path d="M18 9H2v7a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/>
            </svg>
          </span>
          <span>First published {published.toLocaleDateString()}</span>
        </span>
      )}

      {published && updated && updated.getTime() !== published.getTime() && (
        <span class="flex items-center gap-1">
          <span class="text-[#ff8ca5]" aria-hidden="true">
            <!-- check icon -->
            <svg class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" clip-rule="evenodd"
                d="M16.707 5.293a1 1 0 0 1 0 1.414L8.5 14.914a1 1 0 0 1-1.414 0L3.293 11.12a1 1 0 1 1 1.414-1.414l3.086 3.086 7.5-7.5a1 1 0 0 1 1.414 0z"/>
            </svg>
          </span>
          <span>Last updated {updated.toLocaleDateString()}</span>
        </span>
      )}
    </p>

    {post?.author && (
      <details class="mt-3 group w-fit">
        <summary class="list-none flex items-center gap-3 cursor-pointer">
          {post.author.image ? (
            <SanityImage
              asset={post.author.image}
              alt={post.author.name || 'Author'}
              widths={[40,60,80]} sizes="40px"
              class="h-10 w-10 rounded-full object-cover border border-white/10"
            />
          ) : (
            <div class="h-10 w-10 rounded-full bg-white/10 grid place-items-center border border-white/10">
              <span class="text-sm opacity-80">üë§</span>
            </div>
          )}
          <span class="font-medium">{post.author.name || 'Author'}</span>
          <svg class="h-4 w-4 opacity-70 transition-transform group-open:rotate-180" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z" clip-rule="evenodd" />
          </svg>
        </summary>
        {post.author.bio && (
          <div class="mt-2 text-sm opacity-90 prose prose-invert max-w-none">
            <RichText value={post.author.bio} />
          </div>
        )}
      </details>
    )}
  </header>

  <!-- Divider -->
  <hr class="border-t border-[#ff8ca5] my-6" />


  <!-- Desktop: 760px body / 180px gap / 260px TOC -->
  <div class="lg:grid lg:grid-cols-[760px_260px] lg:gap-[180px] gap-8 items-start">
    <main>
      <RichText value={post?.body} />
    </main>

    <aside class="hidden lg:block sticky top-20 self-start">
      <TableOfContents items={toc} />
    </aside>
  </div>
</Base>
