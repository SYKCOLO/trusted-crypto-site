---
// src/pages/guides/index.astro
import Base from '../../layouts/Base.astro'
import groq from 'groq'
import { sanity } from '../../lib/sanity'
import SanityImage from '../../components/SanityImage.astro'

// Fetch the latest guides (we’re using the `post` type as “guides”)
const guides = await sanity.fetch(groq`
  *[_type=="post"] | order(publishedAt desc) {
    title,
    "slug": slug.current,
    excerpt,
    difficulty,
    duration,
    "coverImage": coalesce(mainImage, coverImage),
    publishedAt
  }
`)
---

<Base title="Guides" description="Independent, plain-English crypto guides.">
  <header class="mb-4">
    <h1 class="text-3xl sm:text-4xl font-semibold leading-tight">All Guides</h1>
    <p class="opacity-80 mt-2">Independent, plain-English explainers and how-tos.</p>
  </header>

  {guides?.length ? (
    <div class="grid sm:grid-cols-2 gap-4">
      {guides.map((g:any) => (
        <a href={`/guides/${g.slug}/`} class="rounded-2xl p-4 border border-white/10 bg-white/5 block hover:bg-white/10 transition">
          {g.coverImage && (
            <SanityImage
              asset={g.coverImage}
              alt={g.title}
              widths={[480,640,800]}
              sizes="(max-width: 768px) 100vw, 480px"
              class="w-full h-40 object-cover rounded-lg"
            />
          )}
          <div class="mt-3">
            <h2 class="font-semibold">{g.title}</h2>
            <p class="opacity-70 text-sm mt-1">
              {(g.difficulty || 'Beginner')}
              {g.duration ? ` • ${g.duration} min` : ''}
              {g.publishedAt ? ` • ${new Date(g.publishedAt).toLocaleDateString()}` : ''}
            </p>
            {g.excerpt && <p class="opacity-80 text-sm mt-2 line-clamp-2">{g.excerpt}</p>}
          </div>
        </a>
      ))}
    </div>
  ) : (
    <p class="opacity-80">No guides yet.</p>
  )}
</Base>
